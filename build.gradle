plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'findbugs'
    id 'com.moowork.node' version '0.11'
}

def frontendDir = 'public'

node {
    version = '6.7.0'
    download = true
    nodeModulesDir = file("${project.projectDir}/${frontendDir}")
}

group 'org.kelog'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

def mainClass = 'facerec.Main'

clean.doFirst {
    delete "${rootDir}/core/bin"
}

task compileCpp(type: Exec) {
    workingDir './core'
    commandLine 'make'
    inputs.dir './core/src'
    outputs.dir './core/bin'
}

tasks.compileJava.dependsOn(compileCpp)

task train(type: Exec) {
    workingDir './core/bin'
    commandLine './train', '../photos'
    inputs.dir './core/photos'
    outputs.dir './core/models'
}

tasks.train.dependsOn(compileCpp)
tasks.compileJava.dependsOn(train)

task bowerInstall(type: NodeTask) {
    workingDir = 'public/'
    script = file("${project.projectDir}/${frontendDir}/node_modules/.bin/bower")
    args = ['--allow-root', 'install']
    ignoreExitValue = true
}
tasks.bowerInstall.dependsOn(npmInstall)

tasks.compileJava.dependsOn(bowerInstall)

task run(type: JavaExec) {
    main = mainClass
    classpath = sourceSets.main.runtimeClasspath
}

jar {
    manifest {
        attributes(
                'Main-Class': mainClass
        )
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


dependencies {
    compile 'com.sparkjava:spark-core:2.3'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile group: 'org.apache.commons', name: 'commons-configuration2', version: '2.0'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'
}
